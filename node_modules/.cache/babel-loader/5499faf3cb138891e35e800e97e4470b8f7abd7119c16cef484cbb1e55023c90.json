{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Module test\\\\chatapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ChatList from \"./Components/ChatList/ChatList\";\nimport Grouplist from \"./Components/GroupList/GroupList\";\nimport GroupModal from \"./Components/GroupModal/GroupModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chatgroups, setchatGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [showGroupModal, setShowGroupModal] = useState(false);\n  const createGroup = () => {\n    setShowGroupModal(true);\n  };\n  const handleCreateGroup = groupName => {\n    setchatGroups([...chatgroups, groupName]);\n    setShowGroupModal(false);\n  };\n  const selectGroup = group => {\n    setSelectedGroup(group);\n    setMessages([]);\n  };\n  const sendMessage = () => {\n    if (newMessage) {\n      const currentDate = new Date().toLocaleString();\n      setMessages([...messages, {\n        text: newMessage,\n        date: currentDate\n      }]);\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ChatList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grouplist, {\n      groups: groups,\n      createGroup: createGroup,\n      selectGroup: selectGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GroupModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8CXQj/sDppq40VUSrVl8Fvs7xsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatList","Grouplist","GroupModal","jsxDEV","_jsxDEV","App","_s","chatgroups","setchatGroups","selectedGroup","setSelectedGroup","messages","setMessages","newMessage","setNewMessage","showGroupModal","setShowGroupModal","createGroup","handleCreateGroup","groupName","selectGroup","group","sendMessage","currentDate","Date","toLocaleString","text","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groups","_c","$RefreshReg$"],"sources":["F:/React Module test/chatapp/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ChatList from \"./Components/ChatList/ChatList\";\r\nimport Grouplist from \"./Components/GroupList/GroupList\";\r\nimport GroupModal from \"./Components/GroupModal/GroupModal\";\r\n\r\nconst App = () => {\r\n  const [chatgroups, setchatGroups] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [showGroupModal, setShowGroupModal] = useState(false);\r\n\r\n  const createGroup = () => {\r\n    setShowGroupModal(true);\r\n  };\r\n  const handleCreateGroup = (groupName) => {\r\n    setchatGroups([...chatgroups, groupName]);\r\n    setShowGroupModal(false);\r\n  };\r\n\r\n  const selectGroup = (group) => {\r\n    setSelectedGroup(group);\r\n    setMessages([]);\r\n  };\r\n  const sendMessage = () => {\r\n    if (newMessage) {\r\n      const currentDate = new Date().toLocaleString();\r\n      setMessages([...messages, { text: newMessage, date: currentDate }]);\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ChatList />\r\n      <Grouplist\r\n        groups={groups}\r\n        createGroup={createGroup}\r\n        selectGroup={selectGroup}\r\n      />\r\n      <GroupModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxBD,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EACD,MAAME,iBAAiB,GAAIC,SAAS,IAAK;IACvCX,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEY,SAAS,CAAC,CAAC;IACzCH,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMI,WAAW,GAAIC,KAAK,IAAK;IAC7BX,gBAAgB,CAACW,KAAK,CAAC;IACvBT,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EACD,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIT,UAAU,EAAE;MACd,MAAMU,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;MAC/Cb,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEe,IAAI,EAAEb,UAAU;QAAEc,IAAI,EAAEJ;MAAY,CAAC,CAAC,CAAC;MACnET,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA,CAACJ,QAAQ;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ7B,OAAA,CAACH,SAAS;MACRiC,MAAM,EAAEA,MAAO;MACfjB,WAAW,EAAEA,WAAY;MACzBG,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF7B,OAAA,CAACF,UAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAtCID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}