{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Module test\\\\chatapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport ChatList from \"./Components/ChatList/ChatList\";\nimport GroupModal from \"./Components/GroupModal/GroupModal\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [showCreateGroupModal, setShowCreateGroupModal] = useState(false);\n  // const [Display, setDisplay] = useState(true);\n\n  useEffect(() => {\n    const storedGroups = JSON.parse(localStorage.getItem(\"groups\"));\n    if (storedGroups) {\n      setGroups(storedGroups);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\n  }, [groups]);\n  useEffect(() => {\n    if (selectedGroup) {\n      const storedMessages = localStorage.getItem(selectedGroup);\n      if (storedMessages) {\n        setMessages(JSON.parse(storedMessages));\n      } else {\n        setMessages([]);\n      }\n    }\n  }, [selectedGroup]);\n  useEffect(() => {\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\n    if (selectedGroup) {\n      localStorage.setItem(selectedGroup, JSON.stringify(messages));\n    }\n  }, [groups, selectedGroup, messages]);\n  const createGroup = () => {\n    setShowCreateGroupModal(true);\n  };\n  const handleCreateGroup = groupName => {\n    setGroups([...groups, groupName]);\n    setShowCreateGroupModal(false);\n  };\n  const selectGroup = group => {\n    setSelectedGroup(group);\n    // setDisplay(false);\n    setMessages([]);\n  };\n  const sendMessage = () => {\n    if (newMessage) {\n      const currentDate = new Date().toLocaleString();\n      setMessages([...messages, {\n        text: newMessage,\n        date: currentDate\n      }]);\n      setNewMessage(\"\");\n    }\n  };\n  localStorage.removeItem(groups);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"Head\",\n      children: \"Pocket Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), selectedGroup ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./Assets/Vector.png\",\n      alt: \"display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Send and receive messages without keeping your phone online. Use Pocket Notes on up to 4 linked devices and 1 mobile phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Encrypt\",\n      children: [/*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"end-to-end encrypted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n      selectedGroup: selectedGroup,\n      messages: messages,\n      newMessage: newMessage,\n      sendMessage: sendMessage,\n      setNewMessage: setNewMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GroupModal, {\n      showCreateGroupModal: showCreateGroupModal,\n      closeCreateGroupModal: () => setShowCreateGroupModal(false),\n      createGroup: handleCreateGroup,\n      groups: groups,\n      createGroups: createGroup,\n      selectGroup: selectGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oRzp8oobAjiKjganfBBfUxKicpU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatList","GroupModal","LockIcon","jsxDEV","_jsxDEV","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","messages","setMessages","newMessage","setNewMessage","showCreateGroupModal","setShowCreateGroupModal","storedGroups","JSON","parse","localStorage","getItem","setItem","stringify","storedMessages","createGroup","handleCreateGroup","groupName","selectGroup","group","sendMessage","currentDate","Date","toLocaleString","text","date","removeItem","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","closeCreateGroupModal","createGroups","_c","$RefreshReg$"],"sources":["F:/React Module test/chatapp/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ChatList from \"./Components/ChatList/ChatList\";\r\nimport GroupModal from \"./Components/GroupModal/GroupModal\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\n\r\nconst App = () => {\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [showCreateGroupModal, setShowCreateGroupModal] = useState(false);\r\n  // const [Display, setDisplay] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedGroups = JSON.parse(localStorage.getItem(\"groups\"));\r\n    if (storedGroups) {\r\n      setGroups(storedGroups);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\r\n  }, [groups]);\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup) {\r\n      const storedMessages = localStorage.getItem(selectedGroup);\r\n      if (storedMessages) {\r\n        setMessages(JSON.parse(storedMessages));\r\n      } else {\r\n        setMessages([]);\r\n      }\r\n    }\r\n  }, [selectedGroup]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"groups\", JSON.stringify(groups));\r\n    if (selectedGroup) {\r\n      localStorage.setItem(selectedGroup, JSON.stringify(messages));\r\n    }\r\n  }, [groups, selectedGroup, messages]);\r\n\r\n  const createGroup = () => {\r\n    setShowCreateGroupModal(true);\r\n  };\r\n\r\n  const handleCreateGroup = (groupName) => {\r\n    setGroups([...groups, groupName]);\r\n    setShowCreateGroupModal(false);\r\n  };\r\n\r\n  const selectGroup = (group) => {\r\n    setSelectedGroup(group);\r\n    // setDisplay(false);\r\n    setMessages([]);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage) {\r\n      const currentDate = new Date().toLocaleString();\r\n      setMessages([...messages, { text: newMessage, date: currentDate }]);\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n  localStorage.removeItem(groups);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1 id=\"Head\">Pocket Notes</h1>\r\n      {selectedGroup ? null : <img src=\"./Assets/Vector.png\" alt=\"display\" />}\r\n      <p>\r\n        Send and receive messages without keeping your phone online. Use Pocket\r\n        Notes on up to 4 linked devices and 1 mobile phone\r\n      </p>\r\n      <div className=\"Encrypt\">\r\n        <LockIcon />\r\n        <h3>end-to-end encrypted</h3>\r\n      </div>\r\n\r\n      <ChatList\r\n        selectedGroup={selectedGroup}\r\n        messages={messages}\r\n        newMessage={newMessage}\r\n        sendMessage={sendMessage}\r\n        setNewMessage={setNewMessage}\r\n      />\r\n      <GroupModal\r\n        showCreateGroupModal={showCreateGroupModal}\r\n        closeCreateGroupModal={() => setShowCreateGroupModal(false)}\r\n        createGroup={handleCreateGroup}\r\n        groups={groups}\r\n        createGroups={createGroup}\r\n        selectGroup={selectGroup}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}